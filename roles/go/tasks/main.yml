---
- name: Include the OS-specific vars file
  include_vars: "{{ ansible_os_family }}.yml"

- name: Register the current Go version (if any)
  command: ~{{ ansible_user_id }}/src/go/bin/go version
  ignore_errors: yes
  register: go_version
  changed_when: false

- name: install the prereqs for compiling the Go source on Debian
  when: >
    ansible_os_family == "Debian"
    and (go_version|failed or go_version.stdout != go_version_target)
  sudo: yes
  apt: pkg={{ item }} state=installed
  with_items:
    - gcc
    - libc6-dev
    - libc6-dev-i386
    - mercurial

- name: install the prereqs for compiling the Go source on OS X
  when: >
    ansible_os_family == "Darwin"
    and (go_version|failed or go_version.stdout != go_version_target)
  homebrew: name={{ item }} state=present
  with_items:
    - mercurial

- name: Make sure we have a ~/src folder
  file: path=~{{ ansible_user_id }}/src state=directory
  when: go_version|failed or go_version.stdout != go_version_target

- name: Grab the source via mercurial
  when: go_version|failed or go_version.stdout != go_version_target
  hg: >
    repo=https://code.google.com/p/go
    dest=~{{ ansible_user_id }}/src/go
    revision=release
    purge=yes

- name: Build the source
  when: go_version|failed or go_version.stdout != go_version_target
  shell: cd ~{{ ansible_user_id }}/src/go/src; bash -lc "./all.bash"

- name: Add the Go bin script (sets up GOPATH, etc.) to .bash.d
  template: >
    src=99_go.bash
    dest=~{{ ansible_user_id }}/.bash.d/
    force=yes

- name: make sure ~/managed-bin exists
  file: >
    path=~{{ ansible_user_id }}/managed-bin
    state=directory

- name: link the $GOPATH/bin/ dir to ~/managed-bin
  file: >
    src=~{{ ansible_user_id }}/managed-bin/
    dest={{ gopath | expanduser }}/bin
    state=link

- include: go-get.yml
